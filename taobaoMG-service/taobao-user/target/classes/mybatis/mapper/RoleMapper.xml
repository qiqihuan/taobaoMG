<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanjava.taobao.user.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="CHAR" property="name"/>
    </resultMap>
    <resultMap id="findById" type="Role">
        <id column="rid" jdbcType="INTEGER" property="id"/>
        <result column="rname" jdbcType="CHAR" property="name"/>
        <collection property="permissions" ofType="Permission">
            <id column="perid" jdbcType="INTEGER" property="id" />
            <result column="uri" jdbcType="VARCHAR" property="uri" />
            <result column="pername" jdbcType="VARCHAR" property="name" />
            <result column="create" jdbcType="TINYINT" property="create" />
            <result column="retrieve" jdbcType="TINYINT" property="retrieve" />
            <result column="update" jdbcType="TINYINT" property="update" />
            <result column="delete" jdbcType="TINYINT" property="delete" />
        </collection>
    </resultMap>


    <select id="findById" resultMap="findById">
        select r.id as rid,r.name as rname,per.uri,per.create,per.retrieve,per.update,per.delete,per.name as pername,per.id as perid
        from role r
        left JOIN role_permission rp
        on r.id = rp.role_id
        LEFT JOIN permission per
        on rp.permission_id = per.id
        where r.id=#{id};
    </select>

    <!-- 先将之前的对应关系删除掉 -->
    <insert id="addRolePermission">
        delete from role_permission where role_id=#{id};
        insert into role_permission (role_id,permission_id) values
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{id},#{permissionId})
        </foreach>


    </insert>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, `name`
  </sql>
    <select id="selectByExample" parameterType="com.huanjava.taobao.user.mapper.RoleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.huanjava.taobao.user.mapper.RoleExample">
        delete from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="Role" useGeneratedKeys="true">
    insert into role (`name`)
    values (#{name,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="Role"
            useGeneratedKeys="true">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.huanjava.taobao.user.mapper.RoleExample" resultType="java.lang.Long">
        select count(*) from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update role
        set id = #{record.id,jdbcType=INTEGER},
        `name` = #{record.name,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="Role">
        update role
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="Role">
    update role
    set `name` = #{name,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>